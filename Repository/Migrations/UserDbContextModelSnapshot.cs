// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using QuantityMeasurementRepository;

namespace QuantityMeasurementRepository.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("QuantityMeasurementModel.LengthUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Centimeter");

                    b.Property<double>("Feet");

                    b.Property<double>("Inch");

                    b.Property<string>("OptionType");

                    b.Property<double>("Yard");

                    b.HasKey("Id");

                    b.ToTable("Lengths");
                });

            modelBuilder.Entity("QuantityMeasurementModel.TempretureUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Celcius");

                    b.Property<double>("Fahrenhiet");

                    b.Property<string>("OptionType");

                    b.HasKey("Id");

                    b.ToTable("Tempretures");
                });

            modelBuilder.Entity("QuantityMeasurementModel.VolumeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Gallon");

                    b.Property<double>("Litre");

                    b.Property<double>("Mililitre");

                    b.Property<string>("OptionType");

                    b.HasKey("Id");

                    b.ToTable("Volumes");
                });

            modelBuilder.Entity("QuantityMeasurementModel.WeightUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Gram");

                    b.Property<double>("Kilogram");

                    b.Property<string>("OptionType");

                    b.Property<double>("Tonee");

                    b.HasKey("Id");

                    b.ToTable("Weights");
                });
#pragma warning restore 612, 618
        }
    }
}
